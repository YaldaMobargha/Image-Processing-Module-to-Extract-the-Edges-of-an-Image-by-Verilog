module main_tb;

	// Inputs
	reg [7:0] data;
	reg rst;
	reg clk;
	reg start;

	// Outputs
	wire [9:0] pxl_row;
	wire [9:0] pxl_col;
	wire [7:0] out;
	wire [9:0] out_pxl_row;
	wire [9:0] out_pxl_col;
	wire write_enable;
	wire done;
	
	reg [7:0] matrix_input [887:0][499:0];
	reg [7:0] matrix_output [886:1][498:1];

	// Instantiate the Unit Under Test (UUT)
	main uut (
		.pxl_row(pxl_row), 
		.pxl_col(pxl_col), 
		.data(data), 
		.out(out), 
		.out_pxl_row(out_pxl_row), 
		.out_pxl_col(out_pxl_col), 
		.write_enable(write_enable), 
		.rst(rst), 
		.clk(clk), 
		.start(start), 
		.done(done)
	);

integer length,width;
	integer fid1,fid2;
	integer i,j;
	
	
	initial begin
		clk=0;
		forever #2 clk=~clk;
	end
	
	initial begin
		// Initialize Inputs
		data = 0;
		rst = 0;
		clk = 0;
		start = 0;

		// Wait 100 ns for global reset to finish
		#100;
        
		// Add stimulus here
		fid1=$fopen("pic.txt", "r");
		for(length=0;length<888;length=length+1)begin
			for(width=0;width<500;width=width+1)begin
				$fscanf(fid1, "%d",matrix_input[length][width]);
			end
		end
		$fclose(fid1);
		
		#4
		start=1;
		#4
		start=0;
	end
	
	always@(*)begin
		data<= matrix_input[pxl_row][pxl_col];
	end
	
	always@(posedge write_enable)begin
		matrix_output[out_pxl_row][out_pxl_col]<=out;  
   end
	
   always @(posedge done)begin   
		fid2=$fopen("pic_out.txt", "w");
      for(i=1; i<887;i=i+1)begin 
			for(j=1;j<499;j=j+1) begin
				$fwrite(fid2, "%d ", matrix_output[i][j]);  
         end 
         $fdisplay(fid2);          
      end
      $fclose(fid2);
	end
endmodule
