module controller #(parameter pic_length=888,pic_width=500)(
	output reg [9:0] pxl_row,
   output reg [9:0] pxl_col,
	output reg data_in,
   output reg [1:0] row_in,
   output reg [1:0] col_in,
	output reg [9:0] out_pxl_row,
   output reg [9:0] out_pxl_col,
   output reg write_enable,
	input rst,
   input clk,
   input start,
	output reg done
    );
	 
	initial begin
		row_in=0;
		col_in=0;
		out_pxl_row=0;
		out_pxl_col=0;
		done=0;
	end
	
	reg [2:0] nstate;
	reg [2:0] pstate;
	
	always@(posedge clk)begin
		if(rst)begin
			pstate=0;
		end
		else begin
			pstate=nstate;
		end
	end
	
	always@(posedge clk)begin
		case(pstate)
			0:begin
				out_pxl_row=1;
				out_pxl_col=1;
				if(start)begin
					nstate=1;
				end
				else begin
					nstate=0;
				end
			end
			
			1:begin
				write_enable=0;
				data_in=1;
				row_in=0;
				col_in=0;
				pxl_row=out_pxl_row+row_in-1;
				pxl_col=out_pxl_col+col_in-1;
				nstate=2;
			end
			
			2:begin
				if(col_in<2)begin
					col_in=col_in+1;
					nstate=2;
				end
				else if(row_in<2)begin
					row_in=row_in+1;
					col_in=0;
					nstate=2;
				end
				else begin
					data_in=0;
					nstate=3;
				end
				pxl_row=out_pxl_row+row_in-1;
				pxl_col=out_pxl_col+col_in-1;
			end
			
			3:begin
				write_enable=1;
				nstate=4;
			end
			
			4:begin
				if(out_pxl_col<pic_width-2)begin
					out_pxl_col=out_pxl_col+1;
		    	nstate=1;
				end
				else if (out_pxl_row<pic_length-2)begin
					out_pxl_col=1;
					out_pxl_row=out_pxl_row+1;
					nstate=1;
				end
				else begin
					nstate=5;
				end
			end
			
			5:begin
				data_in=0;
				write_enable=0;
				done=1;
				if(start)begin
					nstate=1;
				end
            else begin
				nstate=5;
				end
			 end
			
			default:nstate=0;
			
		endcase
	end
endmodule
